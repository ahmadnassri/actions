name: job-terraform-plan

on:
  workflow_call:
    secrets:
      TOKEN_TERRAFORM:
        description: Terraform Cloud API token
        required: true

      TOKEN_CLOUDFLARE:
        description: Cloudflare API token
        required: false

      TOKEN_DOCKERHUB:
        description: Docker Hub API token
        required: false

      TOKEN_GITHUB:
        description: GitHub PAT token
        required: false

      TOKEN_GOOGLE:
        description: Google Credentials
        required: false

      TOKEN_NPM:
        description: NPM API token
        required: false

      TOKEN_ROTATION:
        description: Rotation Key
        required: false

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    timeout-minutes: 30

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.7

      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TOKEN_TERRAFORM }}

      - uses: actions/cache@v4.0.2
        with:
          key: terraform-cache-${{ hashFiles('.terraform.lock.hcl') }}
          path: .terraform

      - run: terraform init
      - run: terraform validate
      - run: terraform fmt -check
      - run: terraform plan -lock=false -out terraform.plan
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.TOKEN_CLOUDFLARE }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          GOOGLE_CREDENTIALS: ${{ secrets.TOKEN_GOOGLE }}

          TF_VAR_TOKEN_DOCKERHUB: ${{ secrets.TOKEN_DOCKERHUB }}
          TF_VAR_TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
          TF_VAR_TOKEN_NPM: ${{ secrets.TOKEN_NPM }}
          TF_VAR_TOKEN_TERRAFORM: ${{ secrets.TOKEN_TERRAFORM }}
          TF_VAR_TOKEN_ROTATION: ${{ secrets.TOKEN_ROTATION }}

      # generate plain output
      - run: terraform show -no-color terraform.plan > terraform.text

      # generate json output
      - run: terraform show -json terraform.plan > terraform.json

      - uses: ahmadnassri/action-terraform-report@v4
        with:
          # tell the action the plan outputs
          terraform-text: ${{ github.workspace }}/terraform.text
          terraform-json: ${{ github.workspace }}/terraform.json
          remove-stale-reports: true
