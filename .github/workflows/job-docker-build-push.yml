name: docker-build-push

on:
  workflow_call:
    secrets:
      TOKEN_1PASSWORD:
        description: 1Password service account token
        required: false

    inputs:
      registries:
        type: string
        description: JSON array of registries to publish
        required: true

      platforms:
        type: string
        description: platform to publish
        default: linux/amd64,linux/arm64
        required: false

      name:
        type: string
        description: image name to publish
        required: true

      version:
        type: string
        description: release to publish
        required: true

      license:
        type: string
        description: image license
        required: false

      secrets:
        type: string
        description: List of secrets to expose to the build
        required: false

jobs:
  docker-build-push:
    timeout-minutes: 30

    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4.2.2
      - uses: docker/setup-qemu-action@v3.3.0
      - uses: docker/setup-buildx-action@v3.9.0

      # optionally load secrets from 1password
      - uses: 1password/load-secrets-action@v2
        if: ${{ contains(fromJSON(inputs.registries), 'docker.io') }}
        id: secrets
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.TOKEN_1PASSWORD }}
          TOKEN_DOCKER: op://Tokens/Docker/credential

      # login to github registry
      - uses: docker/login-action@v3.3.0
        if: ${{ contains(fromJSON(inputs.registries), 'ghcr.io') }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # login to docker hub
      - uses: docker/login-action@v3.3.0
        if: ${{ contains(fromJSON(inputs.registries), 'docker.io') }}
        with:
          registry: docker.io
          username: ${{ github.repository_owner }}
          password: ${{ steps.secrets.outputs.TOKEN_DOCKER }}

      # extract metadata and prepare tags
      - uses: docker/metadata-action@v5.6.1
        id: meta
        with:
          images: |
            ${{ contains(fromJSON(inputs.registries), 'ghcr.io') && format('ghcr.io/{0}/{1}', github.repository_owner, inputs.name) || '' }}
            ${{ contains(fromJSON(inputs.registries), 'docker.io') && format('docker.io/{0}/{1}', github.repository_owner, inputs.name) || '' }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern={{major}},value=${{ inputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
          flavor: |
            latest=true
          labels: |
            org.opencontainers.image.title=${{ inputs.name }}
            org.opencontainers.image.licenses=${{ inputs.license }}
            org.opencontainers.image.authors=github.com/${{ github.repository_owner }}

      # publish
      - uses: docker/build-push-action@v5.4.0
        with:
          context: .
          push: true
          sbom: true
          provenance: mode=max
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ inputs.platforms }}
          secrets: ${{ inputs.secrets }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
