name: job-terraform-apply

on:
  workflow_call:
    secrets:
      TOKEN_TERRAFORM:
        description: Terraform Cloud API token
        required: true

      TOKEN_CLOUDFLARE:
        description: Cloudflare API token
        required: false

      TOKEN_DOCKERHUB:
        description: Docker Hub API token
        required: false

      TOKEN_GITHUB:
        description: GitHub PAT token
        required: false

      TOKEN_GOOGLE:
        description: Google Credentials
        required: false

      TOKEN_NPM:
        description: NPM API token
        required: false

      TOKEN_ROTATION:
        description: Rotation Key
        required: false

jobs:
  terraform-apply:
    timeout-minutes: 30

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.7

      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          cli_config_credentials_token: ${{ secrets.TOKEN_TERRAFORM }}

      # cache terraform plugins
      - uses: actions/cache@v4.0.2
        id: terraform-cache
        with:
          key: terraform-cache-${{ hashFiles('.terraform.lock.hcl') }}
          path: .terraform

      # install plugins
      - run: terraform init

      - id: terraform-cloud
        uses: ahmadnassri/action-terraform-cloud-api@v1.1.3
        with:
          token: ${{ secrets.TOKEN_TERRAFORM }}

      - if: ${{ steps.terraform-cloud.outputs.workspace_locked == 'true' }}
        run: |
          echo "::error::workspace is locked"
          exit 1

      # execute plan
      - run: terraform apply -auto-approve
        if: ${{ steps.terraform-cloud.outputs.workspace_locked == 'false' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.TOKEN_CLOUDFLARE }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          GOOGLE_CREDENTIALS: ${{ secrets.TOKEN_GOOGLE }}

          TF_VAR_TOKEN_CLOUDFLARE: ${{ secrets.TOKEN_CLOUDFLARE }}
          TF_VAR_TOKEN_DOCKERHUB: ${{ secrets.TOKEN_DOCKERHUB }}
          TF_VAR_TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
          TF_VAR_TOKEN_NPM: ${{ secrets.TOKEN_NPM }}
          TF_VAR_TOKEN_TERRAFORM: ${{ secrets.TOKEN_TERRAFORM }}
          TF_VAR_TOKEN_ROTATION: ${{ secrets.TOKEN_ROTATION }}
